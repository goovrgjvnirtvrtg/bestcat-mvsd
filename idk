local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

-- Create a window
local Window = OrionLib:MakeWindow({Name = "Murders vs Sheriffs GUI", HidePremium = false, SaveConfig = true, ConfigFolder = "MVS_Config"})

-- Create an ESP tab
local ESPTab = Window:MakeTab({
    Name = "ESP",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Create a section for ESP
local ESPSection = ESPTab:AddSection({
    Name = "ESP"
})

-- Function to enable/disable ESP X-ray
local function toggleESP(state)
    for _, player in pairs(game.Players:GetPlayers()) do
        if player ~= game.Players.LocalPlayer then
            for _, part in pairs(player.Character:GetChildren()) do
                if part:IsA("BasePart") then
                    part.Transparency = state and 0.5 or 0  -- Adjust transparency for X-ray effect
                    part.Material = state and Enum.Material.ForceField or Enum.Material.Plastic  -- Optional: Change material for better visibility
                end
            end
        end
    end
end

-- Add a toggle button for ESP X-ray
ESPSection:AddToggle({
    Name = "ESP X-ray",
    Default = false,
    Callback = function(value)
        toggleESP(value)
    end
})

-- Create an Aimbot tab
local AimbotTab = Window:MakeTab({
    Name = "Aimbot",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Create a section for Aimbot
local AimbotSection = AimbotTab:AddSection({
    Name = "Aimbot"
})

-- Variables for aimbot
local aimbotEnabled = false
local teamCheckEnabled = false
local deadCheckEnabled = false
local fovRadius = 100
local playerService = game:GetService("Players")
local localPlayer = playerService.LocalPlayer
local mouse = localPlayer:GetMouse()
local uis = game:GetService("UserInputService")

-- Draw FOV circle
local fovCircle = Drawing.new("Circle")
fovCircle.Visible = true
fovCircle.Color = Color3.fromRGB(255, 0, 0)
fovCircle.Thickness = 1
fovCircle.NumSides = 30
fovCircle.Radius = fovRadius
fovCircle.Filled = false
fovCircle.Position = Vector2.new(mouse.X, mouse.Y)

-- Update FOV circle position
game:GetService("RunService").RenderStepped:Connect(function()
    fovCircle.Position = Vector2.new(mouse.X, mouse.Y + 36) -- Adjust for the offset
    fovCircle.Radius = fovRadius
end)

-- Function to find the nearest player within FOV
local function getNearestPlayer()
    local nearestPlayer = nil
    local shortestDistance = math.huge

    for _, player in pairs(playerService:GetPlayers()) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("Head") then
            if teamCheckEnabled and player.Team == localPlayer.Team then
                continue
            end
            if deadCheckEnabled and player.Character.Humanoid.Health <= 0 then
                continue
            end
            local screenPos = workspace.CurrentCamera:WorldToViewportPoint(player.Character.Head.Position)
            local distance = (Vector2.new(screenPos.X, screenPos.Y) - Vector2.new(mouse.X, mouse.Y)).magnitude
            if distance < fovRadius and distance < shortestDistance then
                shortestDistance = distance
                nearestPlayer = player
            end
        end
    end

    return nearestPlayer
end

-- Aimbot functionality
local function aimAtPlayer(player)
    if player and player.Character and player.Character:FindFirstChild("Head") then
        local head = player.Character.Head
        local headPos = head.Position
        local screenPos = workspace.CurrentCamera:WorldToViewportPoint(headPos)
        mousemoveabs(screenPos.X, screenPos.Y)
    end
end

-- Add a toggle button for Aimbot
AimbotSection:AddToggle({
    Name = "Aimbot",
    Default = false,
    Callback = function(value)
        aimbotEnabled = value
        while aimbotEnabled do
            local nearestPlayer = getNearestPlayer()
            aimAtPlayer(nearestPlayer)
            wait(0.1)  -- Adjust the delay as necessary
        end
    end
})

-- Add a toggle for TeamCheck
AimbotSection:AddToggle({
    Name = "TeamCheck",
    Default = false,
    Callback = function(value)
        teamCheckEnabled = value
    end
})

-- Add a toggle for DeadCheck
AimbotSection:AddToggle({
    Name = "DeadCheck",
    Default = false,
    Callback = function(value)
        deadCheckEnabled = value
    end
})

-- Add a slider for FOV radius
AimbotSection:AddSlider({
    Name = "FOV Radius",
    Min = 50,
    Max = 300,
    Default = 100,
    Color = Color3.fromRGB(255, 0, 0),
    Increment = 1,
    ValueName = "Radius",
    Callback = function(value)
        fovRadius = value
    end
})

-- Create a Hitbox tab
local HitboxTab = Window:MakeTab({
    Name = "Hitbox",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Create a section for Hitbox
local HitboxSection = HitboxTab:AddSection({
    Name = "Hitbox"
})

-- Variables for hitbox size
local hitboxSize = Vector3.new(2, 2, 1) -- Default hitbox size

-- Function to adjust hitbox size
local function adjustHitboxSize(player, size)
    if player.Character then
        for _, part in pairs(player.Character:GetChildren()) do
            if part:IsA("BasePart") then
                part.Size = size
                part.CanCollide = false
            end
        end
    end
end

-- Add sliders for hitbox dimensions
HitboxSection:AddSlider({
    Name = "Hitbox Width",
    Min = 1,
    Max = 10,
    Default = 2,
    Color = Color3.fromRGB(255, 0, 0),
    Increment = 0.1,
    ValueName = "Width",
    Callback = function(value)
        hitboxSize = Vector3.new(value, hitboxSize.Y, hitboxSize.Z)
    end
})

HitboxSection:AddSlider({
    Name = "Hitbox Height",
    Min = 1,
    Max = 10,
    Default = 2,
    Color = Color3.fromRGB(255, 0, 0),
    Increment = 0.1,
    ValueName = "Height",
    Callback = function(value)
        hitboxSize = Vector3.new(hitboxSize.X, value, hitboxSize.Z)
    end
})

HitboxSection:AddSlider({
    Name = "Hitbox Depth",
    Min = 1,
    Max = 10,
    Default = 1,
    Color = Color3.fromRGB(255, 0, 0),
    Increment = 0.1,
    ValueName = "Depth",
    Callback = function(value)
        hitboxSize = Vector3.new(hitboxSize.X, hitboxSize.Y, value)
    end
})

-- Function to apply hitbox adjustments
local function applyHitboxAdjustments()
    for _, player in pairs(game.Players:GetPlayers()) do
        if player ~= game.Players.LocalPlayer then
            adjustHitboxSize(player, hitboxSize)
        end
    end
end

-- Add a button to apply hitbox adjustments
HitboxSection:AddButton({
    Name = "Apply Hitbox Adjustments",
    Callback = applyHitboxAdjustments
})

-- Create a Credits tab
local CreditsTab = Window:MakeTab({
    Name = "Credits",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Create a section for Credits
CreditsSection = CreditsTab:AddSection({
    Name = "Credits"
})

-- Add a label for credits
CreditsSection:AddParagraph("Made by", "best cat/disord goober")
CreditsSection:AddParagraph("FOR", "Cletus sroeet ScriptHub")

-- Initialize the GUI
OrionLib:Init()
